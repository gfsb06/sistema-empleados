{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gonzalo\\\\Desktop\\\\sistema-empleados\\\\frontend\\\\src\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setToken,\n  setShowLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          username: username,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.access_token);\n        setToken(data.access_token);\n        setShowLogin(false);\n        setMessage('Login successful!');\n      } else {\n        setMessage('Login failed: ' + (data.detail || 'Unknown error'));\n      }\n    } catch (error) {\n      setMessage('Network error: Could not connect to the server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#2B628B'\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        margin: '10px 0',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        margin: '10px 0',\n        padding: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      style: {\n        margin: '10px 0',\n        padding: '5px'\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"UkS7RHHdqtHpQ+ssTj6NJz5Q4n8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","setToken","setShowLogin","_s","username","setUsername","password","setPassword","message","setMessage","handleLogin","response","fetch","method","headers","body","URLSearchParams","data","json","ok","localStorage","setItem","access_token","detail","error","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","margin","padding","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gonzalo/Desktop/sistema-empleados/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login: React.FC<{ setToken: (token: string | null) => void; setShowLogin: (show: boolean) => void }> = ({ setToken, setShowLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/token', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: new URLSearchParams({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.access_token);\r\n        setToken(data.access_token);\r\n        setShowLogin(false);\r\n        setMessage('Login successful!');\r\n      } else {\r\n        setMessage('Login failed: ' + (data.detail || 'Unknown error'));\r\n      }\r\n    } catch (error) {\r\n      setMessage('Network error: Could not connect to the server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: '#2B628B' }}>Login</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        style={{ margin: '10px 0', padding: '5px' }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ margin: '10px 0', padding: '5px' }}\r\n      />\r\n      <button onClick={handleLogin} style={{ margin: '10px 0', padding: '5px' }}>Login</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}